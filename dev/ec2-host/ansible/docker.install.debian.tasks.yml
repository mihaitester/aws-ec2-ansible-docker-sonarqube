---
- name: Install required system packages [ sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common python3-pip virtualenv python3-setuptools ]
  apt: name={{ item }} state=latest update_cache=yes
  loop: [ 'aptitude', 'python3-apt', 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools' ] # https://stackoverflow.com/questions/63680554/ansible-install-python3-apt-package

- name: Add Docker GPG apt Key [ wget -qO .docker.gpg.key https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add .docker.gpg.key ]
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present  

- name: Add Docker Repository [ sudo add-apt-repository 'deb https://download.docker.com/linux/ubuntu bionic stable' ]
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu bionic stable
    state: present

- name: Install docker engine [ sudo apt-get install -y docker-ce ]
  apt: name=docker-ce state=latest update_cache=yes
  
- name: Install Docker Module for Python [ sudo python3 -m pip install docker ]
  # pip: name=docker state=latest
  become: true
  become_user: "{{ansible_user}}"
  command: "python3 -m pip install docker"

- name: Fix docker daemon socket permission [ sudo chmod 666 /var/run/docker.sock ]
  become: true
  become_user: "{{root_user}}"
  command: "sudo chmod 666 /var/run/docker.sock"

# This keeps creating containers that just exit - need a better way to test docker
# - name: Test docker running [ docker run hello-world ]
#   command: docker run hello-world

#https://docs.docker.com/compose/install/
- name: Install docker compose [ sudo python3 -m pip install docker-compose ]
  # pip: name=docker-compose state=latest
  become: true
  become_user: "{{root_user}}"
  command: "python3 -m pip install docker-compose"

# - name: Install docker compose requirements
#   apt: name={{ item }} state=latest update_cache=yes
#   loop: [ 'py-pip', 'python3-dev', 'libffi-dev', 'openssl-dev', 'gcc', 'libc-dev', 'rust', 'cargo', 'make' ]

# - name: Install docker-compose
#   command: sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

- name: Apply docker-compose permissions
  become: true
  become_user: "{{root_user}}"
  command: "sudo chmod +x /usr/local/bin/docker-compose"

# - name: Troubleshooting files
#   become: true
#   become_user: "{{root_user}}"
#   command: "{{item}}"
#   loop:
#     - "python3 -m pip freeze > /home/{{ansible_user}}/pip.freeze.txt"
#     - "dpkg --get-selections > /home/{{ansible_user}}/dpkg--get-selections.txt"