---
# https://docs.docker.com/engine/install/centos/
# https://phoenixnap.com/kb/how-to-install-docker-centos-7

# need to make this a role instead, and define a user for all users
- name: Install yum-utils [ sudo yum install -y yum-utils ]
  become: true
  become_user: "{{root_user}}"
  command: "sudo yum --disablerepo=docker-ce-stable install -y yum-utils" # AVOID: [centos] https://download.docker.com/linux/centos/2/x86_64/stable/repodata/repomd.xml: [Errno 14] HTTPS Error 404 - Not Found

- name: Add docker engine repo [ sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo ]
  become: true
  become_user: "{{root_user}}"
  command: sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

# - name: "AVOID: [centos] https://download.docker.com/linux/centos/2/x86_64/stable/repodata/repomd.xml: [Errno 14] HTTPS Error 404 - Not Found"
#   become: true
#   become_user: "{{root_user}}"
#   command: "{{item}}"
#   loop: 
#     - "sudo yum --disablerepo=docker-ce-stable"
#     - "sudo yum-config-manager --disable docker-ce-stable"

- name: Remove conflicting packages [ sudo yum remove -y podman buildah ]
  yum: name={{item}} state=removed
  become: true
  become_user: "{{root_user}}"
  loop: [ 'podman', 'buildah' ]

- name: Remove old installed packages [ sudo yum remove -y docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine ]
  yum: name={{item}} state=removed
  become: true
  become_user: "{{root_user}}"
  loop: [ 'docker', 'docker-client', 'docker-client-latest', 'docker-common', 'docker-latest', 'docker-latest-logrotate', 'docker-logrotate', 'docker-engine' ]
 
- name: Install required system packages [ sudo yum install ca-certificates curl python3-pip python3-virtualenv python3-setuptools ]
  yum: name={{ item }} state=latest update_cache=yes
  become: true
  become_user: "{{root_user}}"
  loop: [ 'ca-certificates', 'curl', 'python3-pip', 'python3-virtualenv', 'python3-setuptools']

# - name: Add Docker Repository [ sudo yum-repository 'deb https://download.docker.com/linux/centos/docker-ce.repo bionic stable' ]
#   yum_repository:
#     baseurl: https://download.docker.com/linux/centos/docker-ce.repo
#     # gpgkey: http://server.com/keys/somerepo.pub
#     # gpgcheck: yes
#     # state: present

- name: Install docker engine [ sudo yum install -y docker-ce docker-ce-cli containerd.io ]
  yum: name={{item}} state=latest update_cache=yes
  become: true
  become_user: "{{root_user}}"
  loop: [ 'docker-ce', 'docker-ce-cli', 'containerd.io' ]

- name: Install Docker Module for Python [ sudo python3 -m pip install docker ]
  # pip: name=docker state=latest
  become: true
  become_user: "{{root_user}}"
  command: "python3 -m pip install docker"

# This keeps creating containers that just exit - need a better way to test docker
# - name: Test docker running [ docker run hello-world ]
#   command: docker run hello-world

- name: Install other RedHat specifics
  become: true
  become_user: "{{root_user}}"
  command: "{{item}}"
  loop:
    - "sudo python3 -m pip install --user --upgrade pip" # AVOID: [centos] Failed building wheel for cryptography
    - "sudo python3 -m pip install --user wheel" # AVOID: [centos] ERROR: 'pip wheel' requires the 'wheel' package
    - "sudo python3 -m pip install --user setuptools-rust --force-reinstall" # AVOID: [centos] https://github.com/MISP/misp-docker/issues/113 - ModuleNotFoundError: No module named 'setuptools_rust'
    # - "python3 -m pip install -U --user cryptography --force-reinstall" # AVOID: [centos] ERROR: error: can't find Rust compiler # NOTE: something is wrong with this on centos+python3.6

- name: Install problematic package
  become: true
  become_user: "{{root_user}}"
  command: "{{item}}"
  loop:
    - "sudo python3 -m pip uninstall -y cryptography" # AVOID: [centos] ERROR: error: can't find Rust compiler # NOTE: something is wrong with this on centos+python3.6

#https://docs.docker.com/compose/install/
- name: Install docker compose [ sudo python3 -m pip install docker-compose ]
  # pip: name=docker-compose state=latest
  become: true
  become_user: "{{root_user}}"
  command: "sudo python3 -m pip install docker-compose" # AVOID [centos]: chmod: cannot access '/usr/local/bin/docker-compose': No such file or directory"

# - name: Install docker compose requirements
#   apt: name={{ item }} state=latest update_cache=yes
#   loop: [ 'py-pip', 'python3-dev', 'libffi-dev', 'openssl-dev', 'gcc', 'libc-dev', 'rust', 'cargo', 'make' ]

# - name: Install docker-compose
#   command: sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose

- name: Apply docker-compose permissions
  become: true
  become_user: "{{root_user}}"
  command: "sudo chmod +x /usr/local/bin/docker-compose"

- name: Start the docker engine service [ sudo systemctl start docker ]
  become: true
  become_user: "{{root_user}}"
  command: "{{item}}"
  loop:
    - "sudo systemctl enable docker"
    - "sudo systemctl start docker"

- name: Fix docker daemon socket permission [ sudo chmod 666 /var/run/docker.sock ]
  become: true
  become_user: "{{root_user}}"
  command: "{{item}}"
  loop:
    # - "sudo systemctl stop docker"
    - "sudo chmod 666 /var/run/docker.sock" # AVOID: [centos] chmod: cannot access '/var/run/docker.sock': No such file or directory
    # - "sudo systemctl start docker"

# - name: Troubleshooting files
#   become: true
#   become_user: "{{root_user}}"
#   command: "{{item}}"
#   loop:
#     - "python3 -m pip freeze > /home/{{ansible_user}}/pip.freeze.txt"
#     - "yum list installed > /home/{{ansible_user}}/yum.list.installed.txt"